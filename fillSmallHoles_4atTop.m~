% 20160501
% used findHoles4 to find holes
% now can we fill small holes detected

clc; clear all;

pcname = '/Users/mac/Documents/KinectData/102/Sica/K1f500/11_fillSmallHoles.010/1_1841001_rgbd_Oo_refined_nR_oP=0.1_pDs=5_pD=4.6084_sr_dis=0.001_np=8_nR_oP=0.15_pDs=12_pD=1.2525_manuallyRefined.mat';

name = '/Users/mac/Documents/KinectData/102/Sica/K1f500/11_fillSmallHoles.010/1_1841001_rgbd_Oo_refined_nR_oP=0.1_pDs=5_pD=4.6084_sr_dis=0.001_np=8_nR_oP=0.15_pDs=12_pD=1.2525_manuallyRefined_';

newd = 0.001;

load(pcname);
m = size(pc,1);
% m = 5;

% neirad = 0.002; % radius of neighbors sphere
% n = 11; % no of nearest neighbors
% neico = zeros(size(pc,1),1); % to save the neighbors

% figure;
% scatter3(pc(:,1),pc(:,2),pc(:,3),1,pc(:,4:6)/255);
% axis equal;
% view(2);
% hold on;

load(strcat(name,'angle.mat'));
load(strcat(name,'halfdisk.mat'));
load(strcat(name,'boundary.mat'));
load(strcat(name,'g.mat'));
load(strcat(name,'gbeg.mat'));
load(strcat(name,'gend.mat'));
load(strcat(name,'normal.mat'));

prob = zeros(size(pc,1),1);
wangle = 1/3;
whalfdisk = 1/3;
wboundary = 1/3;

for i = 1:m
    prob(i) = angle(i)*wangle + halfdisk(i)*whalfdisk +...
        boundary(i)*wboundary;
end

res = zeros(size(pc,1),1);
res(prob>.6)=1;

pc2 = zeros(size(pc,1)+sum(res),6);

% figure;
% scatter3(pc(:,1),pc(:,2),pc(:,3),1,~[res res res]); 
% view(2);
% axis equal;

k = 0;
% newd = 0.002;

for i = 1:m
    k=k+1;
    pc2(k,:) = pc(i,:);
    if res(i)==1
        p = pc(i,1:3);
        
        k = k+1;
        fprintf('\n%d\tg=%.2f\tgbeg=%d\tgend=%d',i,g(i),gbeg(i),gend(i));
        
        
        bp = null(normal(i,:));
        bc = bsxfun(@minus,pc(gbeg(i),1:3),p)*bp; % plane coefficients
        pbeg = bsxfun(@plus,bc*bp.', p);
        bc = bsxfun(@minus,pc(gend(i),1:3),p)*bp; % plane coefficients
        pend = bsxfun(@plus,bc*bp.', p);
        
        v1 = pbeg-p;
        v1 = v1/norm(v1);
        v2 = pend-p;
        v2 = v2/norm(v2);
        vm = v1+v2;
        vn = p+vm*newd;
        pc2(k,1:3) = vn;
        pc2(k,4:6) = pc(i,4:6);
    end
end

pc = pc2;
save(strcat(name,'newd=',num2str(newd),'.mat'),'pc');


fprintf('\n');

% fprintf('\nno. of boundary points: %d\n', sum(res));
% 
% [j,d] = knnsearch(pc(:,1:3),pc(:,1:3),'K',n); % neighbors and distances
% j = j(:,2:end);
% d = d(:,2:end);
% 
% res2 = res;
% 
% for i = 1:size(pc,1)
%     jj = j(i,:);
%     dd = d(i,:);
%     
%     di = find(dd>neirad); % neighbors outside the sphere
%     
%     jj(di) = [];
%     dd(di) = [];
%     neico(i,1) = numel(dd);
%     if neico(i,1)<8
%         res2(i,1) = 0;
%     end
% end
% 
% fprintf('\nno. of boundary points: %d\n', sum(res2));
% 
% figure;
% scatter3(pc(:,1),pc(:,2),pc(:,3),1,~[res2 res2 res2]); 
% view(2);
% axis equal;
% 
% res3 = ~xor(res,res2);
% fprintf('\nno. of boundary points: %d\n', sum(~res3));
% 
% figure;
% scatter3(pc(:,1),pc(:,2),pc(:,3),1,[res3 res3 res3]); 
% view(2);
% axis equal;

% figure;
% hs(1) = subplot(1,3,1);
% hs(2) = subplot(1,3,2);
% hs(3) = subplot(1,3,3);
% % hs(4) = subplot(1,4,4);
% 
% res1 = ones(size(pc,1),1);
% res1(prob>.6)=0;
% fprintf('\nno. of boundary points: %d\n', sum(~res1));
% 
% scatter3(hs(1),pc(:,1),pc(:,2),pc(:,3),1,[res1 res1 res1]); 
% view(hs(1),2);
% % axis equal;
% axis(hs(1),'equal');
% 
% res2 = ones(size(pc,1),1);
% res2(prob>.6667)=0;
% fprintf('\nno. of boundary points: %d\n', sum(~res2));
% 
% scatter3(hs(2),pc(:,1),pc(:,2),pc(:,3),1,[res2 res2 res2]); 
% view(hs(2),2);
% % axis equal;
% axis(hs(2),'equal');

% res3 = ~xor(res1,res2);
% % res3 = ones(size(pc,1),1);
% % res3(prob>.65)=0;
% fprintf('\nno. of boundary points: %d\n', sum(~res3));
% 
% scatter3(hs(3),pc(:,1),pc(:,2),pc(:,3),1,[res3 res3 res3]); 
% view(hs(3),2);
% % axis equal;
% axis(hs(3),'equal');

% res4 = res1 - res2;
% 
% scatter3(hs(4),pc(:,1),pc(:,2),pc(:,3),1,[res4 res4 res4]); 
% view(hs(4),2);
% axis equal;

